Rauba Maksim # <-- fill it in
# Each line is: <state1> -> <state2>
# Each <state> is: [Px,Qy,a,b]

# transition from the initial state where P is making a step
[P1,Q1,0,0] -> [P1,Q2,0,1]
[P1,Q2,0,1] -> [P1,Q4,0,1]
[P1,Q4,0,1] -> [P2,Q4,1,1]
[P2,Q4,1,1] -> [P2,Q4,1,1]
[P1,Q1,0,0] -> [P2,Q1,1,0]
[P2,Q1,1,0] -> [P3,Q1,1,0]
[P3,Q1,1,0] -> [P4,Q1,1,0]
[P4,Q1,1,0] -> [P4,Q2,1,1]
[P4,Q2,1,1] -> [P1,Q2,0,1]
[P1,Q2,0,1] -> [P2,Q2,1,1]
[P2,Q2,1,1] -> [P2,Q2,1,1]
[P2,Q2,1,1] -> [P2,Q3,1,1]
[P2,Q3,1,1] -> [P2,Q1,1,0]
[P2,Q1,1,0] -> [P2,Q2,1,1]
[P2,Q3,1,1] -> [P2,Q3,1,1]
[P4,Q1,1,0] -> [P1,Q1,0,0]
[P3,Q1,1,0] -> [P3,Q2,1,1]
[P3,Q2,1,1] -> [P4,Q2,1,1]
[P3,Q2,1,1] -> [P3,Q3,1,1]
[P3,Q3,1,1] -> [P4,Q3,1,1]
[P4,Q3,1,1] -> [P4,Q1,1,0]
[P4,Q2,1,1] -> [P4,Q3,1,1]
[P4,Q3,1,1] -> [P1,Q3,0,1]
[P1,Q3,0,1] -> [P1,Q1,0,0]
[P1,Q3,0,1] -> [P2,Q3,1,1]
[P3,Q3,1,1] -> [P3,Q1,1,0]


# Анализ полученных результатов:
# 1) Получилось всего 26 возможных состояний
# 2) Нет, иначе нарушается Sequential consistency: поток P не может находиться в CS, когда поток Q завершен,
#   потому что при нахождении P в CS поток Q не сможет завершиться (a всегда равна 1, когда P в CS),
#   а при завершении Q поток P не сможет войти в CS (b всегда равна 1,когда Q завершен).
# 3) Да, верно, потому что у нас не может быть ситуации deadlocka, потому что CS есть только в потоке P.